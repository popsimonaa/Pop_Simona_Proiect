// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pop_Simona_Proiect.Data;

namespace Pop_Simona_Proiect.Migrations
{
    [DbContext(typeof(Pop_Simona_ProiectContext))]
    [Migration("20210108212202_TipConsultatie")]
    partial class TipConsultatie
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pop_Simona_Proiect.Models.Consultatie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DenumireConsultatie")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Consultatie");
                });

            modelBuilder.Entity("Pop_Simona_Proiect.Models.ProgramareMedic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataConsult")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeMedic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PretConsult")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Specializare")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpitalID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpitalID");

                    b.ToTable("ProgramareMedic");
                });

            modelBuilder.Entity("Pop_Simona_Proiect.Models.Spital", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumeSpital")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Spital");
                });

            modelBuilder.Entity("Pop_Simona_Proiect.Models.TipConsultatie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultatieID")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramareMedicID")
                        .HasColumnType("int");

                    b.Property<int>("TipID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ConsultatieID");

                    b.HasIndex("ProgramareMedicID");

                    b.ToTable("TipConsultatie");
                });

            modelBuilder.Entity("Pop_Simona_Proiect.Models.ProgramareMedic", b =>
                {
                    b.HasOne("Pop_Simona_Proiect.Models.Spital", "Spital")
                        .WithMany("Programari")
                        .HasForeignKey("SpitalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pop_Simona_Proiect.Models.TipConsultatie", b =>
                {
                    b.HasOne("Pop_Simona_Proiect.Models.Consultatie", "Consultatie")
                        .WithMany("TipConsultatii")
                        .HasForeignKey("ConsultatieID");

                    b.HasOne("Pop_Simona_Proiect.Models.ProgramareMedic", "ProgramareMedic")
                        .WithMany("TipConsultatii")
                        .HasForeignKey("ProgramareMedicID");
                });
#pragma warning restore 612, 618
        }
    }
}
